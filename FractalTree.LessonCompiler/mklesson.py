
import os
import json

def splash_screen():
    print("-" * 28)
    print("Fractal Tree Lesson Compiler")
    print("-" * 28)
    print("\n")

def compile_course_in_language(dir, lang):
    jsFile = ""
    courseInfoPath = os.path.join(dir, "course.json")

    with open(courseInfoPath, 'r') as f:
        courseInfo = json.load(f)
    
    courseID = "window.compiledCourse_" + courseInfo["id"] + "_" + lang
    courseInfo["segments"] = []

    root, dirs, files = os.walk(dir).__next__()

    for file in files:
        if (file.endswith(".md")):
            fullFilePath = os.path.join(dir, file)
            print("Adding Segment: " + file)
            with open(fullFilePath, 'r', encoding="utf-8") as f:
                courseInfo["segments"].insert(int(file.replace(".md", "")), f.read())

    jsFile += courseID + " = " + json.dumps(courseInfo) + ";\n\n" # Declare the course metadata
    jsFile += "window.lessonList.push(" + courseID +  ");\n\n" # Add the course to the global list
    print("Adding Metadata")

    return jsFile

def compile_lesson(lessonPath):
    root, dirs, files = os.walk(lessonPath).__next__()
    
    jsFile = "// This File Was Generated By The Fractal Tree Lesson Compiler (mklesson.py)\n\n if (!window.lessonList) { window.lessonList = []; } \n"

    for dir in dirs:
        print("Compiling Lesson For Language: " + dir + "\n")
        jsFile += compile_course_in_language(os.path.join(lessonPath, dir), dir)
        print("\n")

    print("Done Compiling")
    return jsFile

def main():
    lessonPath = "../FractalTree.Lessons/python_intro"

    f = open(os.path.join(lessonPath, "lesson.js"), "w")
    f.write(compile_lesson(lessonPath))
    f.close()
    print("Done Writing")



if (__name__ == "__main__"):
    splash_screen()
    main()